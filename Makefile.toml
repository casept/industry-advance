[config]
skip_core_tasks = true

[tasks.create-target-dir]
script_runner = "@rust"
script = [
'''
fn main() {
  std::fs::DirBuilder::new().recursive(true).create("./target/").unwrap();
}
'''
]

[tasks.assemble]
dependencies = ["create-target-dir"]
command = "arm-none-eabi-as"
args = ["crt0.s", "-o", "target/crt0.o"]

[tasks.build]
dependencies = ["assemble"]
command = "cargo"
args = ["xbuild", "--target", "thumbv4-none-agb.json", "--release"]

[tasks.build-debug]
dependencies = ["assemble"]
command = "cargo"
args = ["xbuild", "--target", "thumbv4-none-agb.json"]

[tasks.pack-rom]
script_runner = "@rust"
script = [
'''
fn main() -> std::io::Result<()> {
      std::process::Command::new("arm-none-eabi-objcopy").args(
        &["-O", "binary",
        &format!("target/thumbv4-none-agb/release/industry-advance"),
        &format!("target/industry-advance.gba")])
        .output().expect("failed to objcopy!");
  
  Ok(())
}
'''
]

[tasks.test]
command = "cargo"
args = ["test", "--lib"]

[tasks.run]
dependencies = ["build", "pack-rom"]
command = "mgba"
args = ["--log-level=-1", "target/industry-advance.gba"]

[tasks.run-qt]
dependencies = ["build", "pack-rom"]
command = "/usr/bin/mgba-qt"
args = ["--log-level=16", "target/industry-advance.gba"]

[tasks.justrelease]
dependencies = ["build", "pack-rom"]

[tasks.build-all]
dependencies = ["build", "pack-rom"]

[tasks.default]
alias = "build-all"

[tasks.debug]
dependencies = ["build-debug"]
command = "/usr/bin/mgba-qt"
args = ["--log-level=-1", "./target/thumbv4-none-agb/debug/industry-advance", "--gdb"]
